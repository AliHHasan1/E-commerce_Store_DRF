[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "account.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "account.models",
        "description": "account.models",
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "validate_password",
        "importPath": "django.contrib.auth.password_validation",
        "description": "django.contrib.auth.password_validation",
        "isExtraImport": true,
        "detail": "django.contrib.auth.password_validation",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "importPath": "account.serializers",
        "description": "account.serializers",
        "isExtraImport": true,
        "detail": "account.serializers",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "CustomerViewSet",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models.product_models",
        "description": "product.models.product_models",
        "isExtraImport": true,
        "detail": "product.models.product_models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models.product_models",
        "description": "product.models.product_models",
        "isExtraImport": true,
        "detail": "product.models.product_models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "importPath": "product.serializers.category_serializers",
        "description": "product.serializers.category_serializers",
        "isExtraImport": true,
        "detail": "product.serializers.category_serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "product.serializers.product_serializers",
        "description": "product.serializers.product_serializers",
        "isExtraImport": true,
        "detail": "product.serializers.product_serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "product.serializers.product_serializers",
        "description": "product.serializers.product_serializers",
        "isExtraImport": true,
        "detail": "product.serializers.product_serializers",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "product.models.category_models",
        "description": "product.models.category_models",
        "isExtraImport": true,
        "detail": "product.models.category_models",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "importPath": "product.views.category_views",
        "description": "product.views.category_views",
        "isExtraImport": true,
        "detail": "product.views.category_views",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "importPath": "product.views.product_views",
        "description": "product.views.product_views",
        "isExtraImport": true,
        "detail": "product.views.product_views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "account.migrations.0001_initial",
        "description": "account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Customer\",\n            fields=[\n                (",
        "detail": "account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "account.models.customer_models",
        "description": "account.models.customer_models",
        "peekOfCode": "class Customer(AbstractUser):\n    ROLE_CHOICES = (\n    ('admin', 'Admin'),\n    ('seller', 'Seller'),\n    ('customer', 'Customer'),\n    )\n    # تم جعل الemail حقل unique\n    email = models.EmailField(unique=True, null=False, blank=False)\n    phone = models.CharField(max_length=20)\n    address = models.TextField(max_length=500)",
        "detail": "account.models.customer_models",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "kind": 6,
        "importPath": "account.serializers.customer_serializers",
        "description": "account.serializers.customer_serializers",
        "peekOfCode": "class CustomerSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True, required=True, validators=[validate_password])\n    password2 = serializers.CharField(write_only=True, required=True, validators=[validate_password])\n    class Meta:\n        model = Customer\n        fields = ('username', 'first_name', 'last_name', 'email', 'password', 'password2', 'address', 'phone',)\n    def validate_first_name(self, value):\n        if not value.replace(' ', '').isalpha():\n            raise serializers.ValidationError({'first_name': 'the first name must be alphanumeric'})\n        return value",
        "detail": "account.serializers.customer_serializers",
        "documentation": {}
    },
    {
        "label": "CustomerViewSet",
        "kind": 6,
        "importPath": "account.views.customer_views",
        "description": "account.views.customer_views",
        "peekOfCode": "class CustomerViewSet(viewsets.ModelViewSet):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer",
        "detail": "account.views.customer_views",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "account.apps",
        "description": "account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"account\"",
        "detail": "account.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "account.urls",
        "description": "account.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'customer', CustomerViewSet)\nurlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "account.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "account.urls",
        "description": "account.urls",
        "peekOfCode": "urlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "account.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0001_initial",
        "description": "order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"product\", \"0001_initial\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Order\",\n            fields=[",
        "detail": "order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "order.models.orderitem_models",
        "description": "order.models.orderitem_models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='items')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveIntegerField()\n    price_at_time = models.DecimalField(max_digits=10, decimal_places=2)\n    class Meta:\n        unique_together = ('order', 'product')  # يمنع تكرار نفس المنتج في نفس الطلب\n    def get_total(self):\n        return self.quantity * self.price_at_time\n    def __str__(self):",
        "detail": "order.models.orderitem_models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "order.models.order_models",
        "description": "order.models.order_models",
        "peekOfCode": "class Order(models.Model):\n    STATUS_CHOICES = [\n        ('New', 'New'),\n        ('Processing', 'Processing'),\n        ('Completed', 'Completed'),\n        ('Cancelled', 'Cancelled'),\n    ]\n    customer = models.ForeignKey(Customer, related_name='orders', on_delete=models.CASCADE)\n    order_date = models.DateTimeField(default=timezone.now)\n    total_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)",
        "detail": "order.models.order_models",
        "documentation": {}
    },
    {
        "label": "ProductOrderSerializer",
        "kind": 6,
        "importPath": "order.serializers.order_serializers",
        "description": "order.serializers.order_serializers",
        "peekOfCode": "class ProductOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'price', 'image_url']\n        read_only_fields = fields # هذه المعلومات للقراءة فقط داخل الطلب\n# OrderItemSerializer: لتسلسل عناصر الطلب (المنتجات ضمن طلب معين).\nclass OrderItemSerializer(serializers.ModelSerializer):\n    # 'product_details' يعرض تفاصيل المنتج للقراءة فقط.\n    product_details = ProductOrderSerializer(source='product', read_only=True)\n    # 'product_id' يُستخدم عند إرسال البيانات (مثلاً عند إنشاء طلب جديد).",
        "detail": "order.serializers.order_serializers",
        "documentation": {}
    },
    {
        "label": "OrderItemSerializer",
        "kind": 6,
        "importPath": "order.serializers.order_serializers",
        "description": "order.serializers.order_serializers",
        "peekOfCode": "class OrderItemSerializer(serializers.ModelSerializer):\n    # 'product_details' يعرض تفاصيل المنتج للقراءة فقط.\n    product_details = ProductOrderSerializer(source='product', read_only=True)\n    # 'product_id' يُستخدم عند إرسال البيانات (مثلاً عند إنشاء طلب جديد).\n    product_id = serializers.PrimaryKeyRelatedField(\n        queryset=Product.objects.all(), source='product', write_only=True\n    )\n    class Meta:\n        model = OrderItem\n        fields = ['id', 'product_id', 'product_details', 'quantity', 'unit_price']",
        "detail": "order.serializers.order_serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "order.serializers.order_serializers",
        "description": "order.serializers.order_serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    # 'items' هو سيريالايزر متداخل لعناصر الطلب، ويجب أن يكون مطلوبًا (required=True)\n    # لأنه لا معنى لطلب بدون منتجات.\n    items = OrderItemSerializer(many=True, required=True)\n    # 'customer_details' لعرض اسم العميل باختصار.\n    customer_details = serializers.ReadOnlyField(source='customer.first_name') # أو source='customer.get_full_name' إذا كان موجودًا\n    class Meta:\n        model = Order\n        fields = ['id', 'customer', 'customer_details', 'order_date', 'total_amount', 'status', 'notes', 'items']\n        # هذه الحقول للقراءة فقط ويتم تعيينها بواسطة النظام (مثل المعرف، التاريخ، الإجمالي، الحالة).",
        "detail": "order.serializers.order_serializers",
        "documentation": {}
    },
    {
        "label": "OrderStatusUpdateSerializer",
        "kind": 6,
        "importPath": "order.serializers.order_serializers",
        "description": "order.serializers.order_serializers",
        "peekOfCode": "class OrderStatusUpdateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = ['status']\n        # كل الحقول الأخرى للقراءة فقط عند استخدام هذا السيريالايزر.\n        read_only_fields = ['id', 'customer', 'order_date', 'total_amount', 'notes']\n    # التحقق من صحة قيمة الحالة المدخلة.\n    def validate_status(self, value):\n        valid_statuses = [choice[0] for choice in Order.STATUS_CHOICES]\n        if value not in valid_statuses:",
        "detail": "order.serializers.order_serializers",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "order.apps",
        "description": "order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"order\"",
        "detail": "order.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "product.migrations.0001_initial",
        "description": "product.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Category\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "product.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "product.models.category_models",
        "description": "product.models.category_models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True,null=True)\n    is_active = models.BooleanField(default=True)\n    def __str__(self):\n        return self.name\n    class Meta:\n        verbose_name_plural = \"Categories\"",
        "detail": "product.models.category_models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "product.models.product_models",
        "description": "product.models.product_models",
        "peekOfCode": "class Product(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True,null=True)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='products')\n    stock_quantity = models.PositiveIntegerField(default=0)\n    is_available = models.BooleanField(default=True)\n    image_url = models.URLField(blank=True,null=True)\n    def __str__(self):\n        return self.name",
        "detail": "product.models.product_models",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "product.serializers.category_serializers",
        "description": "product.serializers.category_serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = '__all__'",
        "detail": "product.serializers.category_serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "product.serializers.product_serializers",
        "description": "product.serializers.product_serializers",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = '__all__'",
        "detail": "product.serializers.product_serializers",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "kind": 6,
        "importPath": "product.views.category_views",
        "description": "product.views.category_views",
        "peekOfCode": "class CategoryViewSet(viewsets.ModelViewSet):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer\n    @action(detail=True, methods=['get'])\n    def products(self, request, pk=None):\n        category = self.get_object()\n        products = category.products.all()\n        serializer = ProductSerializer(products, many=True)\n        return Response(serializer.data)",
        "detail": "product.views.category_views",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "product.views.product_views",
        "description": "product.views.product_views",
        "peekOfCode": "class ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer",
        "detail": "product.views.product_views",
        "documentation": {}
    },
    {
        "label": "ProductConfig",
        "kind": 6,
        "importPath": "product.apps",
        "description": "product.apps",
        "peekOfCode": "class ProductConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"product\"",
        "detail": "product.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "product.urls",
        "description": "product.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'categories', CategoryViewSet)\nrouter.register(r'products', ProductViewSet)\nurlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "product.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "product.urls",
        "description": "product.urls",
        "peekOfCode": "urlpatterns = [\n    path('api/', include(router.urls)),\n]",
        "detail": "product.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "store.asgi",
        "description": "store.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "store.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-9to5vdjhf-xal7udh+vi8e-zeclg+8u1$-a1wfmt4m5^&7*!e)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-9to5vdjhf-xal7udh+vi8e-zeclg+8u1$-a1wfmt4m5^&7*!e)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    'rest_framework',",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'account',",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"store.urls\"",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "ROOT_URLCONF = \"store.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "WSGI_APPLICATION = \"store.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'store',\n        'USER': 'root',\n        'PASSWORD': 'admin', # عدلو المغلومات بناء على نوع القاعدة يلي عندكون\n        'HOST': '127.0.0.1',",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "DATABASES = {\n'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'store',\n        'USER': 'root',\n        'PASSWORD': 'admin', # عدلو المغلومات بناء على نوع القاعدة يلي عندكون\n        'HOST': '127.0.0.1',\n        'PORT': '3306',\n    }\n}",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 8,\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Damascus\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "TIME_ZONE = \"Asia/Damascus\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "store.settings",
        "description": "store.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'account.Customer'",
        "detail": "store.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "store.urls",
        "description": "store.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('', include('product.urls')),\n    path('', include('account.urls')),\n]",
        "detail": "store.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "store.wsgi",
        "description": "store.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "store.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"store.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]